services:
  web-service:
    image: nginx
    volumes:
      - ./nginx-conf:/etc/nginx/templates
      - ./logs/access.log:/var/log/nginx/access.log
      # - letsencrypt:/etc/letsencrypt
      - ./webdata:/usr/share/nginx/html
    ports:
      - "8080:80"
      - "4443:443"
    env_file: "./env/nginx.env"
    # depends_on:
    #   - certbot
    networks:
      customnetwork:
        ipv4_address: 172.20.0.2

  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - letsencrypt:/etc/letsencrypt
  #     - ./webdata:/usr/share/nginx/html
  #   networks:
  #     customnetwork:
  #       ipv4_address: 172.20.0.3

  fluentd:
    build:
      context: ./fluentd
    volumes:
      - type: bind
        source: ./logs/access.log
        target: /var/log/nginx/access.log
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf
    env_file: "./env/fluentd.env"
    depends_on:
      - web-service
      - minio
    networks:
      customnetwork:
        ipv4_address: 172.20.0.10

  minio:
    image: quay.io/minio/minio
    volumes:
      - ./minio/data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file: "./env/minio.env"
    command: server /data
    networks:
      customnetwork:
        ipv4_address: 172.20.0.11

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    depends_on: 
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      customnetwork:
        ipv4_address: 172.20.0.12

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      customnetwork:
        ipv4_address: 172.20.0.13

  kafka-consumer:
    build:
      context: ./consumer
    volumes:
      - ./env/consumer.env:/app/env/consumer.env
      - ./consumer/consumer.py:/app/consumer.py
    depends_on:
      - kafka
      - minio
    restart: always
    networks:
      customnetwork:
        ipv4_address: 172.20.0.14
  
  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9003:9003"
    environment:
      KAFKA_BROKER_CONNECT: "172.20.0.12:9092"
    networks:
      customnetwork:
        ipv4_address: 172.20.0.15

volumes:
  letsencrypt:

networks:
  customnetwork:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

